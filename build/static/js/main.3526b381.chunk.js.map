{"version":3,"sources":["CasualistContext.js","LandingPage/LandingPage.js","Filter/Filter.js","Header/Header.js","StatusBar/StatusBar.js","Item/Item.js","EditList/EditList.js","AddListItem/AddListItem.js","ItemDetail/ItemDetail.js","EditItem/EditItem.js","List/List.js","ListView/ListView.js","mock.js","App.js","index.js"],"names":["CasualistContext","React","createContext","list","items","currentItem","displayItems","filterItems","updateCurrItem","updateDisplayItemsOrder","updateFilter","LandingPage","props","state","linkHidden","handleSubmit","e","preventDefault","setState","copyLink","linkRef","current","type","focus","select","document","execCommand","createRef","className","onSubmit","htmlFor","name","id","placeholder","this","ref","href","context","onClick","value","readOnly","Component","contextType","Filter","handleChange","filterVal","target","assignVals","assignedOptions","allItems","map","item","includes","assign","push","Consumer","onChange","Header","to","StatusBar","status","Item","handleClick","callback","toggleEditItemModal","toggleItemDetailModal","draggableId","index","provided","innerRef","draggableProps","dragHandleProps","item_name","assigned","EditList","defaultValue","AddListItem","ItemDetail","notes","EditItem","List","editListModalIsOpen","addListItemModalIsOpen","itemDetailModalIsOpen","editItemModalIsOpen","listOrder","toggleEditListModal","toggleAddListItemModal","handleOnDragEnd","result","Modal","setAppElement","modalStyles","content","top","left","right","bottom","marginRight","transform","onDragEnd","droppableId","isDropDisabled","currentFilter","droppableProps","isOpen","style","shouldCloseOnOverlayClick","ListView","Mock","App","mocklist","mockitems","val","filter","assignVal","slice","toString","destination","Array","from","splice","source","reorderedItem","newItemOrder","forEach","sortedItems","i","item_order","length","j","contextValue","Provider","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3526b381.chunk.js","sourcesContent":["import React from 'react'\n\nconst CasualistContext = React.createContext({\n    list: {},\n    items: [],\n    currentItem: {},\n    displayItems: [],\n    filterItems: () => {},\n    updateCurrItem: () => {},\n    updateDisplayItemsOrder: () => {},\n    updateFilter: () => {}\n})\n\nexport default CasualistContext;","import React, { Component } from 'react';\nimport './LandingPage.css';\nimport CasualistContext from '../CasualistContext'\n\nclass LandingPage extends Component {\n  static contextType = CasualistContext\n\n  constructor(props) {\n    super(props)\n\n    this.linkRef = React.createRef()\n  }\n\n  state = {\n    linkHidden: true\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.setState({\n      linkHidden: false\n    })\n  }\n\n  copyLink = (e) => {\n    this.linkRef.current.type = 'text'\n    this.linkRef.current.focus()\n    this.linkRef.current.select()\n    document.execCommand('copy')\n    this.linkRef.current.type = 'hidden'\n  }\n\n  render() {\n    return (\n      <div className='LandingPage view_container'>\n          <div className='LandingPage_text'>\n            <h1>Casualist</h1>\n            <h2>The fast-casual checklist maker.</h2>\n            <p>This app is designed to help a user easily and quickly create a dynamic and collaborative checklist.  Simply enter the title of the new list below and hit 'Create List'. Once the list is created just share the provided link with any collaborators. No sign-up or login needed, no wasted time.</p>\n          </div>\n          <div className='LandingPage_create'>\n              <form className='LandingPage_form' onSubmit={(e) => this.handleSubmit(e)}>\n                  <label htmlFor='listname' className='LandingPage_label'>Start a New List</label>\n                  <input type='text' name='listname' id='listname' className='LandingPage_listname' placeholder='Enter new list title.'/>\n                  <button type='submit' id='listname_submit'>Create List</button>\n              </form>\n              <div className={`LandingPage_link ${this.state.linkHidden ? 'hidden' : ''}`}> \n                <a ref={this.linkRef} href={`https://casualist.vercel.app/${this.context.list.id}`}>https://casualist.vercel.app/{this.context.list.id}</a>\n                <button className='copylink' onClick={() => this.copyLink()}>Copy Link</button>\n                <input ref={this.linkRef} type='hidden' value={`https://casualist.vercel.app/${this.context.list.id}`} readOnly></input>\n              </div>\n          </div>\n      </div>\n    )\n  }\n}\n\n\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport CasualistContext from '../CasualistContext';\nimport './Filter.css';\n\nclass Filter extends Component {\n  static contextType = CasualistContext\n\n  handleChange = (e, filterItems, updateFilter) => {\n    const filterVal = e.target.value\n    updateFilter(filterVal)\n    filterItems(filterVal)\n  }\n\n  render() {\n    const assignVals = []\n    const assignedOptions = this.context.allItems.map(item => {\n      if(!assignVals.includes(item.assign) && item.assign !== '') { // removes duplicates\n        assignVals.push(item.assign)\n        return <option key={item.id} value={`assigned: ${item.assign}`}>{item.assign}</option> // value with additional 'assigned:' string to avoid user input confusion with set options (ie. if user acidentally assigns to 'all', 'todo', etc)\n      }\n      return null // to avoid compile warning\n    })\n\n    return (\n      <div className='Filter'>\n        <CasualistContext.Consumer>\n          {({filterItems, updateFilter}) => (\n            <>\n            <label htmlFor='Filter_select' id='Filter_label'>Filter:</label>\n            <select name='Filter_select' id='Filter_select' onChange={(e) => this.handleChange(e, filterItems, updateFilter)}>\n              <option value='all'>All</option>\n              <option value='todo'>Status: To Do</option>\n              <option value='doing'>Status: Doing</option>\n              <option value='done'>Status: Done</option>\n              {assignedOptions}\n            </select>\n            </>\n          )} \n        </CasualistContext.Consumer>\n      </div>\n    )\n  }\n}\n\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\nimport './Header.css';\nimport Filter from '../Filter/Filter'\nimport CasualistContext from '../CasualistContext';\n\nclass Header extends Component {\n  static contextType = CasualistContext\n\n  constructor(props) {\n    super(props)\n\n    this.linkRef = React.createRef()\n  }\n\n  copyLink = (e) => {\n    this.linkRef.current.type = 'text'\n    this.linkRef.current.focus()\n    this.linkRef.current.select()\n    document.execCommand('copy')\n    this.linkRef.current.type = 'hidden'\n  }\n\n  render() {\n\n    return (\n      <div className='Header'>\n        <h2>\n          <Link className='router_link' to='/'>\n            Casualist\n          </Link>\n        </h2>\n        <div className='Header_controls'>\n            <Filter />\n            <div className='Header_link'>\n              <a href={`https://casualist.vercel.app/${this.context.list.id}`}>https://casualist.vercel.app/{this.context.list.id}</a>\n              <button className='copylink' onClick={() => this.copyLink()}>Copy Link</button>\n              <input ref={this.linkRef} type='hidden' value={`https://casualist.vercel.app/${this.context.list.id}`} readOnly></input>\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default Header;\n","import React, { Component } from 'react';\nimport './StatusBar.css';\n\nclass StatusBar extends Component {\n\n  render() {\n    return (\n      <div className='StatusBar'>\n        <span className={`StatusBar_tog ${this.props.status === 'todo' ? 'Item_todo' : ''}`}>To Do</span>\n        <span className={`StatusBar_tog ${this.props.status === 'doing' ? 'Item_doing' : ''}`}>Doing</span>\n        <span className={`StatusBar_tog ${this.props.status === 'done' ? 'Item_done' : ''}`}>Done</span>\n      </div>\n    )\n  }\n}\n\n\nexport default StatusBar;\n","import React, { Component } from 'react';\nimport CasualistContext from '../CasualistContext';\nimport { Draggable } from 'react-beautiful-dnd'\nimport './Item.css';\nimport StatusBar from '../StatusBar/StatusBar'\n\nclass Item extends Component {\n  static contextType = CasualistContext\n\n  handleClick = (e, id, callback) => {\n    callback(id)\n    e.target.value === 'edit' ? this.props.toggleEditItemModal() : this.props.toggleItemDetailModal()\n    \n  }\n\n  render() {\n    return (\n      <Draggable draggableId={this.props.id} index={this.props.index}>\n        {(provided) => (\n          <div className='Item' ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n            <CasualistContext.Consumer>\n              {({updateCurrItem}) => (\n                <>\n                <div className='Item_left'>\n                  <h4>{this.props.item_name}</h4>\n                  <p className={`${this.props.assigned ? '' : 'hidden'}`}>Assigned to: {this.props.assigned}</p>\n                  <StatusBar status={this.props.status}/>             \n                </div>\n                <div className='Item_right'>\n                  <button className='Item_button'>Delete</button>\n                  <button className='Item_button' value='edit' onClick={(e) => this.handleClick(e, this.props.id, updateCurrItem)}>\n                      Edit\n                  </button>\n                  <button className='Item_button' value='details' onClick={(e) => this.handleClick(e, this.props.id, updateCurrItem)}>\n                    Details\n                  </button>\n                </div>\n                </>\n              )}\n            </CasualistContext.Consumer>\n          </div>\n        )}\n      </Draggable>\n    )\n  }\n}\n\n\nexport default Item;\n","import React, { Component } from 'react';\nimport CasualistContext from '../CasualistContext';\nimport './EditList.css';\n\nclass EditList extends Component {\n  static contextType = CasualistContext\n\n  render() {\n    const list = this.context.list\n\n    return (\n      <div className='EditList'>\n        <form className='EditList_form'>\n          <div className='EditList_top'>\n            <label htmlFor='form_name' className='EditList_label'>Name:</label>\n            <input id='form_name' name='form_name' className='EditList_input' type='text' defaultValue={list.name}></input>\n          </div>\n          <div className='EditList_bottom'>\n            <button  type='submit' className='EditList_button'>\n              Submit\n            </button>\n            <button className='EditList_button'>\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\n\nexport default EditList;\n","import React, { Component } from 'react';\nimport './AddListItem.css';\n\nclass AddListItem extends Component {\n\n  render() {\n    return (\n      <div className='AddListItem'>\n        <form className='AddListItem_form'>\n          <label htmlFor='form_name' className='AddListItem_label'>Name:</label>\n          <input id='form_name' name='form_name' className='AddListItem_input' type='text' placeholder=''></input>\n          <label htmlFor='form_assign' className='AddListItem_label'>Assigned To:</label>\n          <input id='form_assign' name='form_assign' className='AddListItem_input' type='text' placeholder=''></input>\n          <label htmlFor='form_notes' className='AddListItem_label'>Notes:</label>\n          <textarea id='form_notes' name='form_notes' className='AddListItem_input' type='text' placeholder=''></textarea>\n          <div className='AddListItem_bottom'>\n            <button  type='submit' className='AddListItem_button'>\n              Submit\n            </button>\n            <button className='AddListItem_button'>\n                Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\n\nexport default AddListItem;\n","import React, { Component } from 'react';\nimport CasualistContext from '../CasualistContext';\nimport './ItemDetail.css';\nimport StatusBar from '../StatusBar/StatusBar'\n\nclass ItemDetail extends Component {\n  static contextType = CasualistContext\n\n  handleClick = () => {\n    this.props.toggleEditItemModal()\n    this.props.toggleItemDetailModal()\n\n  }\n\n  render() {\n    const currentItem = this.context.currentItem[0]\n\n    return (\n      <div className='ItemDetail'>\n        <ul className='ItemDetail_ul'> \n          <div className='ItemDetail_item'>\n            <div className='ItemDetail_top'>\n              <div className='ItemDetail_left'>\n                <h4>{currentItem.name}</h4>\n                <p className={`${currentItem.assign ? '' : 'hidden'}`}>Assigned to: {currentItem.assign}</p>\n                <StatusBar status={currentItem.status}/> \n              </div>\n              <div className='ItemDetail_right'>\n                <button className='ItemDetail_button'>Delete</button>\n                <button className='ItemDetail_button' onClick={() => this.handleClick()}>\n                  Edit\n                </button>\n                <button className='ItemDetail_button' onClick={() => this.props.toggleItemDetailModal()}>\n                  Back\n                </button>\n              </div>\n            </div>\n            <div className='ItemDetail_bottom'>\n              <p>Notes:</p>\n              <p>{currentItem.notes}</p>\n            </div>\n        </div>\n        </ul>\n      </div>\n    )\n  }\n}\n\n\nexport default ItemDetail;\n","import React, { Component } from 'react';\nimport CasualistContext from '../CasualistContext';\nimport './EditItem.css';\nimport StatusBar from '../StatusBar/StatusBar'\n\nclass EditItem extends Component {\n  static contextType = CasualistContext\n\n  render() {\n    const currentItem = this.context.currentItem[0]\n\n    return (\n      <div className='EditItem'>\n        <form className='EditItem_form'>\n          <label htmlFor='form_name' className='EditItem_label'>Name:</label>\n          <input id='form_name' name='form_name' className='EditItem_input' type='text' defaultValue={currentItem.name}></input>\n          <label htmlFor='form_assign' className='EditItem_label'>Assigned To:</label>\n          <input id='form_assign' name='form_assign' className='EditItem_input' type='text' defaultValue={currentItem.assign}></input>\n          <StatusBar status={currentItem.status} />\n          <label htmlFor='form_notes' className='EditItem_label'>Notes:</label>\n          <textarea id='form_notes' name='form_notes' className='EditItem_input' type='text' defaultValue={currentItem.notes}></textarea>\n          <div className='EditItem_bottom'>\n            <button  type='submit' className='EditItem_button'>\n              Submit\n            </button>\n            <button className='EditItem_button'>\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\n\nexport default EditItem;\n","import React, { Component } from 'react';\nimport Modal from 'react-modal'\nimport { DragDropContext, Droppable} from 'react-beautiful-dnd'\nimport CasualistContext from '../CasualistContext'\nimport './List.css';\nimport Item from '../Item/Item'\nimport EditList from '../EditList/EditList'\nimport AddListItem from '../AddListItem/AddListItem'\nimport ItemDetail from '../ItemDetail/ItemDetail';\nimport EditItem from '../EditItem/EditItem'\n\nclass List extends Component {\n  static contextType = CasualistContext\n\n  state = {\n    editListModalIsOpen: false,\n    addListItemModalIsOpen: false,\n    itemDetailModalIsOpen: false,\n    editItemModalIsOpen: false,\n    listOrder: this.context.displayItems //maybe have to move to context?\n  }\n\n  toggleEditListModal = () => {\n    this.setState({\n      editListModalIsOpen: !this.state.editListModalIsOpen\n    })\n  }\n\n  toggleAddListItemModal = () => {\n    this.setState({\n      addListItemModalIsOpen: !this.state.addListItemModalIsOpen\n    })\n  }\n\n  toggleItemDetailModal = () => {\n    this.setState({\n      itemDetailModalIsOpen: !this.state.itemDetailModalIsOpen\n    })\n  }\n\n  toggleEditItemModal = () => {\n    this.setState({\n      editItemModalIsOpen: !this.state.editItemModalIsOpen\n    })\n  }\n\n  handleOnDragEnd = (result, callback) => {\n    callback(result)\n  }\n  \n  componentDidMount() {\n    Modal.setAppElement('body');\n  }\n\n  render() {\n    const modalStyles = {\n      content : {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n      }\n    }\n\n    const items = this.context.displayItems.map((item, index) => {\n      return <Item \n              index={index}\n              key={item.id} \n              id={item.id} \n              item_name={item.name} \n              assigned={item.assign} \n              status={item.status} \n              toggleItemDetailModal={this.toggleItemDetailModal}\n              toggleEditItemModal={this.toggleEditItemModal}/>\n    }) \n\n    return (\n      <div className='List'>\n        <h3>{this.context.list.name}</h3>\n        <button onClick={() => this.toggleEditListModal()}>\n          Edit List Name\n        </button>\n        <CasualistContext.Consumer>\n          {({updateDisplayItemsOrder}) => (\n            <DragDropContext onDragEnd={(result) => this.handleOnDragEnd(result, updateDisplayItemsOrder)}>\n              <Droppable droppableId={this.context.list.id} isDropDisabled={this.context.currentFilter !== 'all' ? true : false}>\n                {(provided) => (\n                  <ul className='List_ul' {...provided.droppableProps} ref={provided.innerRef}>\n                    {items}\n                    {provided.placeholder}\n                  </ul>\n                )}\n              </Droppable>\n            </DragDropContext>\n          )}\n        </CasualistContext.Consumer>\n        <button onClick={() => this.toggleAddListItemModal()}>\n          + Add List Item\n        </button>\n\n        <Modal  /* Pop up Edit List Modal */\n          isOpen={this.state.editListModalIsOpen} \n          style={modalStyles} \n          shouldCloseOnOverlayClick={true}> \n          <EditList />\n        </Modal>\n\n        <Modal  /* Pop up Item Detail Modal */\n          isOpen={this.state.itemDetailModalIsOpen} \n          style={modalStyles} \n          shouldCloseOnOverlayClick={true}> \n          <ItemDetail \n            toggleEditItemModal={this.toggleEditItemModal} \n            toggleItemDetailModal={this.toggleItemDetailModal} />\n        </Modal>\n\n        <Modal  /* Pop up Item Detail Modal */\n          isOpen={this.state.editItemModalIsOpen} \n          style={modalStyles} \n          shouldCloseOnOverlayClick={true}> \n          <EditItem toggleEditItemModal={this.toggleEditItemModal} />\n        </Modal>\n\n        <Modal  /* Pop up Add List Item Modal */\n          isOpen={this.state.addListItemModalIsOpen} \n          style={modalStyles} \n          shouldCloseOnOverlayClick={true}> \n          <AddListItem />\n        </Modal>\n      </div>\n    )\n  }\n}\n\n\nexport default List;\n","import React, { Component } from 'react';\nimport './ListView.css';\nimport Header from '../Header/Header'\nimport List from '../List/List'\n\nclass ListView extends Component {\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className='ListView'>\n            <div className='view_container'>\n              <List />\n            </div>\n        </div>\n      </>\n    )\n  }\n}\n\n\nexport default ListView;\n","const Mock = {\n   'mocklist': {\n        'id': 'fgxbEp',\n        'name': 'My List',\n        'item_order': ['1', '2', '3', '4']\n        \n    }\n,\n    'mockitems': [\n        {\n            'id': '1',\n            'list_id': 'fgxbEp',\n            'name': 'Wash the car',\n            'assign': 'Me',\n            'status': 'todo',\n            'notes': 'Use soap and water.'\n        },\n        {\n            'id': '2',\n            'list_id': 'fgxbEp',\n            'name': 'Vacuum the house',\n            'assign': 'Me',\n            'status': 'doing',\n            'notes': 'Do not miss any spots!'\n        },\n        {\n            'id': '3',\n            'list_id': 'fgxbEp',\n            'name': 'Walk the dog',\n            'assign': 'You',\n            'status': 'done',\n            'notes': 'This is very important. Make sure it gets done.'\n        },\n        {\n            'id': '4',\n            'list_id': 'fgxbEp',\n            'name': 'Set the alarm',\n            'assign': '',\n            'status': 'todo',\n            'notes': 'Alarm code is: 55676'\n        },\n    ]\n}\n\nexport default Mock;\n","import React, { Component } from 'react';\nimport {Route} from 'react-router-dom'\nimport './App.css';\nimport CasualistContext from './CasualistContext'\nimport LandingPage from './LandingPage/LandingPage';\nimport ListView from './ListView/ListView'\nimport Mock from './mock.js'\n\nclass App extends Component {\n  static contextType = CasualistContext\n\n  state = {\n    list: Mock.mocklist,\n    allItems: Mock.mockitems,\n    displayItems: Mock.mockitems,\n    currentItem: {},\n    currentFilter: 'all'\n  }\n\n  filterItems = (val) => {\n    if(val === 'all') {\n      this.setState({\n        displayItems: this.state.allItems\n      })\n    }\n    else if(val === 'todo' || val === 'doing' || val ==='done') {\n      const filterItems = this.state.allItems.filter(item => item.status === val)\n      \n      this.setState({\n        displayItems: filterItems\n      })\n    }\n    else {\n      const assignVal = val.slice(10)\n      const filterItems = this.state.allItems.filter(item => item.assign === assignVal)\n      \n      this.setState({\n        displayItems: filterItems\n      })\n    }\n  }\n\n  updateCurrItem = (id) => {\n    const currentItem = this.state.allItems.filter(item => item.id === id.toString())\n    \n    this.setState({\n      currentItem: currentItem\n    })\n  }\n\n  updateDisplayItemsOrder = (result) => {\n    if (!result.destination) return;\n    const items = Array.from(this.state.displayItems)\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem)\n\n    const newItemOrder = []\n    items.forEach(item => newItemOrder.push(item.id))\n    //API call to update list.item_order with newItemOrder\n    this.setState({\n      allItems: items,\n      displayItems: items\n    })\n  }\n\n  updateFilter = (val) => { // Used conditionally to only allow drag and drop when all items are displayed\n    this.setState({\n      currentFilter: val\n    })\n  }\n\n  componentDidMount() {\n    //API call to get List and Items\n    const items = Mock.mockitems\n    const list = Mock.mocklist\n    const sortedItems = []\n    for(let i = 0; i < list.item_order.length; i++ ) { // sorting list based on item order (by ID)\n      for(let j = 0; j < items.length; j++){\n        if(list.item_order[i] === items[j].id) {\n          sortedItems.push(items[j])\n        }\n      }\n    }\n\n    this.setState({\n      allItems: sortedItems,\n      displayItems: sortedItems\n    })\n  }\n\n  render() {\n    const contextValue = {\n      list: this.state.list,\n      allItems: this.state.allItems,\n      displayItems: this.state.displayItems,\n      currentItem: this.state.currentItem,\n      currentFilter: this.state.currentFilter,\n      filterItems: this.filterItems,\n      updateCurrItem: this.updateCurrItem,\n      updateDisplayItemsOrder: this.updateDisplayItemsOrder,\n      updateFilter: this.updateFilter\n    }\n\n    return (\n      <main className='App'>\n        <CasualistContext.Provider value={contextValue}>\n          <Route\n            exact\n            path={'/'}\n            component={LandingPage}/>\n          <Route\n            exact\n            path={'/:list_id'}\n            component={ListView}/>\n        </CasualistContext.Provider>\n      </main>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n  );"],"sourceRoot":""}