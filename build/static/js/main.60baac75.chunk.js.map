{"version":3,"sources":["CasualistContext.js","config.js","LandingPage/LandingPage.js","Filter/Filter.js","Header/Header.js","StatusBar/StatusBar.js","Item/Item.js","EditList/EditList.js","AddListItem/AddListItem.js","ItemDetail/ItemDetail.js","EditItem/EditItem.js","List/List.js","ListView/ListView.js","App.js","index.js"],"names":["CasualistContext","React","createContext","list","items","currentItem","displayItems","filterItems","updateCurrItem","updateDisplayItemsOrder","updateFilter","loadList","loadListItems","addItem","deleteItem","patchList","patchItem","config","API_ENDPOINT","process","API_KEY","LandingPage","props","state","linkHidden","activeLink","handleSubmit","e","preventDefault","newListName","target","listname","value","newListUrl","nanoid","newListData","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","ok","Error","json","catch","err","message","setState","copyLink","linkRef","current","type","focus","select","document","execCommand","createRef","className","onSubmit","htmlFor","name","id","placeholder","this","ref","href","onClick","readOnly","Component","contextType","Filter","handleChange","filterVal","assignVals","assignedOptions","context","allItems","map","item","includes","assign","push","Consumer","currentFilter","defaultChecked","onChange","Header","to","url_path","StatusBar","handleClick","callback","item_id","status","Item","toggleEditItemModal","toggleItemDetailModal","handleDelete","draggableId","toString","index","provided","innerRef","draggableProps","dragHandleProps","item_name","assigned","EditList","form_name","toggleEditListModal","defaultValue","AddListItem","showAssignInput","handleSelect","form_assign_input","form_assign","form_notes","toggleAddListItemModal","required","ItemDetail","notes","EditItem","checkInitialAssign","List","editListModalIsOpen","addListItemModalIsOpen","itemDetailModalIsOpen","editItemModalIsOpen","handleOnDragEnd","result","Modal","setAppElement","modalStyles","content","top","left","right","bottom","marginRight","transform","onDragEnd","droppableId","isDropDisabled","droppableProps","isOpen","style","onRequestClose","shouldCloseOnOverlayClick","ListView","listUrl","undefined","location","pathname","substring","resJson","App","val","filter","assignVal","slice","destination","Array","from","splice","source","reorderedItem","newItemOrder","forEach","sortByItemOrder","sortedItems","i","item_order","length","j","data","patchRequestOptions","setTimeout","patchData","newAllItems","allItemsIndex","findIndex","displayItemsIndex","newDisplayItems","newCurrentItem","contextValue","Provider","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.60baac75.chunk.js","sourcesContent":["import React from 'react'\n\nconst CasualistContext = React.createContext({\n    list: {},\n    items: [],\n    currentItem: {},\n    displayItems: [],\n    filterItems: () => {},\n    updateCurrItem: () => {},\n    updateDisplayItemsOrder: () => {},\n    updateFilter: () => {},\n    loadList: () => {},\n    loadListItems: () => {},\n    addItem: () => {},\n    deleteItem: () => {},\n    patchList: () => {},\n    patchItem: () => {}\n})\n\nexport default CasualistContext;","\nconst config ={\n    API_ENDPOINT: process.env.REACT_APP_API_BASE_URL, \n    API_KEY: process.env.REACT_APP_API_KEY \n} \n\nexport default config;","import React, { Component } from 'react';\nimport './LandingPage.css';\nimport CasualistContext from '../CasualistContext'\nimport config from '../config'\nimport {nanoid} from 'nanoid'\n\nclass LandingPage extends Component {\n  static contextType = CasualistContext\n\n  constructor(props) {\n    super(props)\n\n    this.linkRef = React.createRef()\n  }\n\n  state = {\n    linkHidden: true,\n    activeLink: ''\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const newListName = e.target.listname.value\n    const newListUrl = nanoid(6)\n\n    const newListData = {\n      'url_path': newListUrl,\n      'name': newListName,\n      'item_order': []\n    }\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${config.API_KEY}`\n      },\n      body: JSON.stringify(newListData)\n    }\n    \n    fetch(`${config.API_ENDPOINT}/lists`, requestOptions)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Could not create list')\n        }\n        return res.json()\n      })\n      .catch(err => err.message)\n\n    this.setState({\n      linkHidden: false,\n      activeLink: newListUrl\n    })\n  }\n\n  copyLink = (e) => {\n    this.linkRef.current.type = 'text'\n    this.linkRef.current.focus()\n    this.linkRef.current.select()\n    document.execCommand('copy')\n    this.linkRef.current.type = 'hidden'\n  }\n\n  render() {\n    return (\n      <div className='LandingPage view_container'>\n          <div className='LandingPage_text'>\n            <h1>Casualist</h1>\n            <h2>The fast-casual checklist maker.</h2>\n            <p>This app is designed to help a user easily and quickly create a dynamic and collaborative checklist.  Simply enter the title of the new list below and hit 'Create List'. Once the list is created just share the provided link with any collaborators. No sign-up or login needed, no wasted time.</p>\n          </div>\n          <div className='LandingPage_create'>\n              <form className='LandingPage_form' onSubmit={(e) => this.handleSubmit(e)}>\n                  <label htmlFor='listname' className='LandingPage_label'>Start a New List</label>\n                  <input type='text' name='listname' id='listname' className='LandingPage_listname' placeholder='Enter new list title.'/>\n                  <button type='submit' id='listname_submit'>Create List</button>\n              </form>\n              <div className={`LandingPage_link ${this.state.linkHidden ? 'hidden' : ''}`}> \n                <a ref={this.linkRef} href={`https://casualist.vercel.app/${this.state.activeLink}`}>https://casualist.vercel.app/{this.state.activeLink}</a>\n                <button className='copylink' onClick={() => this.copyLink()}>Copy Link</button>\n                <input ref={this.linkRef} type='hidden' value={`https://casualist.vercel.app/${this.state.activeLink}`} readOnly></input>\n              </div>\n          </div>\n      </div>\n    )\n  }\n}\n\n\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport CasualistContext from '../CasualistContext';\nimport './Filter.css';\n\nclass Filter extends Component {\n  static contextType = CasualistContext\n\n  handleChange = (e, filterItems, updateFilter) => {\n    const filterVal = e.target.value\n    updateFilter(filterVal)\n    filterItems(filterVal)\n  }\n\n  render() {\n    const assignVals = []\n    const assignedOptions = this.context.allItems.map(item => {\n      if(!assignVals.includes(item.assign) && item.assign !== '') { // removes duplicates\n        assignVals.push(item.assign)\n        return <option key={item.id} value={`assigned: ${item.assign}`}>{item.assign}</option> // value with additional 'assigned:' string to avoid user input confusion with set options (ie. if user acidentally assigns to 'all', 'todo', etc)\n      }\n      return null // to avoid compile warning\n    })\n\n    return (\n      <div className='Filter'>\n        <CasualistContext.Consumer>\n          {({filterItems, updateFilter}) => (\n            <>\n            <label htmlFor='Filter_select' id='Filter_label'>Filter:</label>\n            <select name='Filter_select' id='Filter_select' value={this.context.currentFilter} defaultChecked onChange={(e) => this.handleChange(e, filterItems, updateFilter)}>\n              <option value='all'>All</option>\n              <option value='todo'>Status: To Do</option>\n              <option value='doing'>Status: Doing</option>\n              <option value='done'>Status: Done</option>\n              {assignedOptions}\n            </select>\n            </>\n          )} \n        </CasualistContext.Consumer>\n      </div>\n    )\n  }\n}\n\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\nimport './Header.css';\nimport Filter from '../Filter/Filter'\nimport CasualistContext from '../CasualistContext';\n\nclass Header extends Component {\n  static contextType = CasualistContext\n\n  constructor(props) {\n    super(props)\n\n    this.linkRef = React.createRef()\n  }\n\n  copyLink = (e) => {\n    this.linkRef.current.type = 'text'\n    this.linkRef.current.focus()\n    this.linkRef.current.select()\n    document.execCommand('copy')\n    this.linkRef.current.type = 'hidden'\n  }\n\n  render() {\n\n    return (\n      <div className='Header'>\n        <h2>\n          <Link className='router_link' to='/'>\n            Casualist\n          </Link>\n        </h2>\n        <div className='Header_controls'>\n            <Filter />\n            <div className='Header_link'>\n              <a href={`https://casualist.vercel.app/${this.context.list.url_path}`}>https://casualist.vercel.app/{this.context.list.url_path}</a>\n              <button className='copylink' onClick={() => this.copyLink()}>Copy Link</button>\n              <input ref={this.linkRef} type='hidden' value={`https://casualist.vercel.app/${this.context.list.url_path}`} readOnly></input>\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default Header;\n","import React, { Component } from 'react';\nimport CasualistContext from '../CasualistContext';\nimport './StatusBar.css';\n\nclass StatusBar extends Component {\n  static contextType = CasualistContext\n\n  handleClick = (e, callback) => {\n    const id = this.props.item_id\n    const data = {'status': e.target.id}\n\n    callback(id, data)\n  }\n  \n  render() {\n    return (\n      <CasualistContext.Consumer>\n        {({patchItem}) => (\n          <div className='StatusBar'>\n            <div className={`StatusBar_tog ${this.props.status === 'todo' ? 'Item_todo' : ''}`} id='todo' onClick={(e) => this.handleClick(e, patchItem)}>To Do</div>\n            <div className={`StatusBar_tog ${this.props.status === 'doing' ? 'Item_doing' : ''}`} id='doing' onClick={(e) => this.handleClick(e, patchItem)}>Doing</div>\n            <div className={`StatusBar_tog ${this.props.status === 'done' ? 'Item_done' : ''}`} id='done' onClick={(e) => this.handleClick(e, patchItem)}>Done</div>\n          </div>\n        )}\n      </CasualistContext.Consumer>\n    )\n  }\n}\n\n\nexport default StatusBar;\n","import React, { Component } from 'react';\nimport CasualistContext from '../CasualistContext';\nimport { Draggable } from 'react-beautiful-dnd'\nimport './Item.css';\nimport StatusBar from '../StatusBar/StatusBar'\n\nclass Item extends Component {\n  static contextType = CasualistContext\n\n  handleClick = (e, id, callback) => {\n    callback(id)\n    e.target.value === 'edit' ? this.props.toggleEditItemModal() : this.props.toggleItemDetailModal()\n    \n  }\n\n  handleDelete = (id, callback) => {\n    callback(id)\n  }\n\n  render() {\n    return (\n      <Draggable draggableId={this.props.id.toString()} index={this.props.index}>\n        {(provided) => (\n          <div className='Item' ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n            <CasualistContext.Consumer>\n              {({updateCurrItem, deleteItem}) => (\n                <>\n                <div className='Item_left'>\n                  <h4>{this.props.item_name}</h4>\n                  <p className={`${this.props.assigned ? '' : 'hidden'}`}>Assigned to: {this.props.assigned}</p>\n                  <StatusBar status={this.props.status} item_id={this.props.id}/>             \n                </div>\n                <div className='Item_right'>\n                  <button className='Item_button' onClick={(e) => this.handleDelete(this.props.id, deleteItem)}>Delete</button>\n                  <button className='Item_button' value='edit' onClick={(e) => this.handleClick(e, this.props.id, updateCurrItem)}>\n                      Edit\n                  </button>\n                  <button className='Item_button' value='details' onClick={(e) => this.handleClick(e, this.props.id, updateCurrItem)}>\n                    Details\n                  </button>\n                </div>\n                </>\n              )}\n            </CasualistContext.Consumer>\n          </div>\n        )}\n      </Draggable>\n    )\n  }\n}\n\n\nexport default Item;\n","import React, { Component } from 'react';\nimport CasualistContext from '../CasualistContext';\nimport './EditList.css';\n\nclass EditList extends Component {\n  static contextType = CasualistContext\n\n  handleSubmit = (e, callback) => {\n    e.preventDefault()\n    const newListName = e.target.form_name.value\n    const patchData = {'name': newListName}\n\n    callback(patchData)\n\n    this.props.toggleEditListModal()\n  }\n\n  render() {\n    const list = this.context.list\n\n    return (\n      <div className='EditList'>\n        <CasualistContext.Consumer>\n          {({patchList}) => (\n            <form className='EditList_form' onSubmit={(e) => this.handleSubmit(e, patchList)}>\n              <div className='EditList_top'>\n                <label htmlFor='form_name' className='EditList_label'>Name:</label>\n                <input id='form_name' name='form_name' className='EditList_input' type='text' defaultValue={list.name}></input>\n              </div>\n              <div className='EditList_bottom'>\n                <button  type='submit' className='EditList_button'>\n                  Submit\n                </button>\n                <button type='button' className='EditList_button' onClick={() => this.props.toggleEditListModal()}>\n                  Cancel\n                </button>\n              </div>\n            </form>\n          )}\n        </CasualistContext.Consumer>\n      </div>\n    )\n  }\n}\n\n\nexport default EditList;\n","import React, { Component } from 'react';\nimport CasualistContext from '../CasualistContext';\nimport './AddListItem.css';\n\nclass AddListItem extends Component {\n  static contextType = CasualistContext\n  state = {\n    showAssignInput: true\n  }\n\n  handleSelect = (e) => {\n    if(e.target.value === 'new'){\n      this.setState({\n        showAssignInput: true\n      })\n    }\n    else {\n      this.setState({\n        showAssignInput: false\n      })\n    }\n  }\n\n  handleSubmit = (e, callback) => {\n    e.preventDefault()\n    const newItem = {\n      'list_id': this.context.list.id,\n      'name': e.target.form_name.value,\n      'assign': this.state.showAssignInput ? e.target.form_assign_input.value : e.target.form_assign.value,\n      'notes': e.target.form_notes.value\n    }\n\n    callback(newItem)\n    this.props.toggleAddListItemModal()\n  }\n\n  render() {\n    const assignVals = []\n    const assignedOptions = this.context.allItems.map(item => {\n      if(!assignVals.includes(item.assign) && item.assign !== '') { // removes duplicates\n        assignVals.push(item.assign)\n        return <option key={item.id} value={item.assign}>{item.assign}</option> // value with additional 'assigned:' string to avoid user input confusion with set options (ie. if user acidentally assigns to 'all', 'todo', etc)\n      }\n      return null // to avoid compile warning\n    })\n\n    return (\n      <div className='AddListItem'>\n        <CasualistContext.Consumer>\n          {({addItem})=> (\n            <form className='AddListItem_form' onSubmit={(e) => this.handleSubmit(e, addItem)}>\n              <label htmlFor='form_name' className='AddListItem_label'>Name:</label>\n              <input id='form_name' name='form_name' className='AddListItem_input' type='text' placeholder='' required></input>\n              <label htmlFor='form_assign' className='AddListItem_label'>Assigned To:</label>\n              <select name='form_assign' id='form_assign' defaultValue='new' onChange={(e) => this.handleSelect(e)}>\n                {assignedOptions}\n                <option value='new'>+ Add New</option>\n              </select>\n              <input id='form_assign_input' name='form_assign_input' className={`EditItem_input ${this.state.showAssignInput ? '' : 'hidden'} `} type='text'></input>\n              <label htmlFor='form_notes' className='AddListItem_label'>Notes:</label>\n              <textarea id='form_notes' name='form_notes' className='AddListItem_input' type='text' placeholder=''></textarea>\n              <div className='AddListItem_bottom'>\n                <button  type='submit' className='AddListItem_button'>\n                  Submit\n                </button>\n                <button type='button' className='AddListItem_button' onClick={() => this.props.toggleAddListItemModal()} >\n                    Cancel\n                </button>\n              </div>\n            </form>\n          )}\n        </CasualistContext.Consumer>\n      </div>\n    )\n  }\n}\n\n\nexport default AddListItem;\n","import React, { Component } from 'react';\nimport CasualistContext from '../CasualistContext';\nimport './ItemDetail.css';\nimport StatusBar from '../StatusBar/StatusBar'\n\nclass ItemDetail extends Component {\n  static contextType = CasualistContext\n\n  handleClick = () => {\n    this.props.toggleEditItemModal()\n    this.props.toggleItemDetailModal()\n\n  }\n\n  handleDelete = (id, callback) => {\n    callback(id)\n    this.props.toggleItemDetailModal()\n  }\n\n  render() {\n    const currentItem = this.context.currentItem[0]\n\n    return (\n      <div className='ItemDetail'>\n        <ul className='ItemDetail_ul'> \n          <CasualistContext.Consumer>\n              {({deleteItem}) => (\n                <div className='ItemDetail_item'>\n                  <div className='ItemDetail_top'>\n                    <div className='ItemDetail_left'>\n                      <h4>{currentItem.name}</h4>\n                      <p className={`${currentItem.assign ? '' : 'hidden'}`}>Assigned to: {currentItem.assign}</p>\n                      <StatusBar status={currentItem.status} item_id={currentItem.id}/> \n                    </div>\n                    <div className='ItemDetail_right'>\n                      <button className='ItemDetail_button' onClick={(e) => this.handleDelete(currentItem.id, deleteItem)}>Delete</button>\n                      <button className='ItemDetail_button' onClick={() => this.handleClick()}>\n                        Edit\n                      </button>\n                      <button className='ItemDetail_button' onClick={() => this.props.toggleItemDetailModal()}>\n                        Back\n                      </button>\n                    </div>\n                  </div>\n                  <div className='ItemDetail_bottom'>\n                    <p className={`${currentItem.notes ? '' : 'hidden'}`}>Notes:</p>\n                    <p>{currentItem.notes}</p>\n                  </div>\n                </div>\n              )}\n          </CasualistContext.Consumer>\n        </ul>\n      </div>\n    )\n  }\n}\n\n\nexport default ItemDetail;\n","import React, { Component } from 'react';\nimport CasualistContext from '../CasualistContext';\nimport './EditItem.css';\n\nclass EditItem extends Component {\n  static contextType = CasualistContext\n  \n  state = {\n    showAssignInput: false\n  }\n\n  checkInitialAssign = (currentItem) => { \n    if(currentItem.assign === '') {\n      this.setState({\n        showAssignInput: true\n      })\n    }\n  }\n\n  handleSelect = (e) => {\n    if(e.target.value === 'new'){\n      this.setState({\n        showAssignInput: true\n      })\n    }\n    else {\n      this.setState({\n        showAssignInput: false\n      })\n    }\n  }\n\n  handleSubmit = (e, callback) => {\n    e.preventDefault()\n    const id = this.context.currentItem[0].id\n    const newName = e.target.form_name.value\n    const newAssign = this.state.showAssignInput ? e.target.form_assign_input.value : e.target.form_assign.value\n    const newNotes = e.target.form_notes.value\n\n    const patchData = {\n      'name': newName,\n      'assign': newAssign,\n      'notes': newNotes\n    }\n\n    callback(id, patchData)\n\n    this.props.toggleEditItemModal()\n  }\n\n  componentDidMount() {\n    const currentItem = this.context.currentItem[0] \n    this.checkInitialAssign(currentItem) // if currentItem on load has no assign value it changes state to render conditional Assign input.\n  }\n\n  render() {\n    const currentItem = this.context.currentItem[0]\n    const assignVals = []\n    const assignedOptions = this.context.allItems.map(item => {\n      if(!assignVals.includes(item.assign) && item.assign !== '') { // removes duplicates\n        assignVals.push(item.assign)\n        return <option key={item.id} value={item.assign}>{item.assign}</option> // value with additional 'assigned:' string to avoid user input confusion with set options (ie. if user acidentally assigns to 'all', 'todo', etc)\n      }\n      return null // to avoid compile warning\n    })\n\n    return (\n      <div className='EditItem'>\n        <CasualistContext.Consumer>\n          {({patchItem}) => (\n            <form className='EditItem_form' onSubmit={(e) => this.handleSubmit(e, patchItem)}>\n              <label htmlFor='form_name' className='EditItem_label'>Name:</label>\n              <input id='form_name' name='form_name' className='EditItem_input' type='text' defaultValue={currentItem.name}></input>\n              <label htmlFor='form_assign' className='EditItem_label'>Assigned To:</label>\n              <select name='form_assign' id='form_assign' defaultValue={currentItem.assign !== '' ? currentItem.assign : 'new' } onChange={(e) => this.handleSelect(e)}>\n                {assignedOptions}\n                <option value='new'>+ Add New</option>\n              </select>\n              <input id='form_assign_input' name='form_assign_input' className={`EditItem_input ${this.state.showAssignInput ? '' : 'hidden'} `} type='text'></input>\n              <label htmlFor='form_notes' className='EditItem_label'>Notes:</label>\n              <textarea id='form_notes' name='form_notes' className='EditItem_input' type='text' defaultValue={currentItem.notes}></textarea>\n              <div className='EditItem_bottom'>\n                <button  type='submit' className='EditItem_button'>\n                  Submit\n                </button>\n                <button type='button' className='EditItem_button' onClick={() => this.props.toggleEditItemModal()}>\n                  Cancel\n                </button>\n              </div>\n            </form>\n          )}\n        </CasualistContext.Consumer>\n      </div>\n    )\n  }\n}\n\n\nexport default EditItem;\n","import React, { Component } from 'react';\nimport Modal from 'react-modal'\nimport { DragDropContext, Droppable} from 'react-beautiful-dnd'\nimport CasualistContext from '../CasualistContext'\nimport './List.css';\nimport Item from '../Item/Item'\nimport EditList from '../EditList/EditList'\nimport AddListItem from '../AddListItem/AddListItem'\nimport ItemDetail from '../ItemDetail/ItemDetail';\nimport EditItem from '../EditItem/EditItem'\n\nclass List extends Component {\n  static contextType = CasualistContext\n\n  state = {\n    editListModalIsOpen: false,\n    addListItemModalIsOpen: false,\n    itemDetailModalIsOpen: false,\n    editItemModalIsOpen: false\n  }\n\n  toggleEditListModal = () => {\n    this.setState({\n      editListModalIsOpen: !this.state.editListModalIsOpen\n    })\n  }\n\n  toggleAddListItemModal = () => {\n    this.setState({\n      addListItemModalIsOpen: !this.state.addListItemModalIsOpen\n    })\n  }\n\n  toggleItemDetailModal = () => {\n    this.setState({\n      itemDetailModalIsOpen: !this.state.itemDetailModalIsOpen\n    })\n  }\n\n  toggleEditItemModal = () => {\n    this.setState({\n      editItemModalIsOpen: !this.state.editItemModalIsOpen\n    })\n  }\n\n  handleOnDragEnd = (result, callback) => {\n    callback(result)\n  }\n  \n  componentDidMount() {\n    Modal.setAppElement('body');\n  }\n\n  render() {\n    const modalStyles = {\n      content : {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n      }\n    }\n\n    const items = this.context.displayItems.map((item, index) => {\n      return <Item \n              index={index}\n              key={item.id} \n              id={item.id} \n              item_name={item.name} \n              assigned={item.assign} \n              status={item.status} \n              toggleItemDetailModal={this.toggleItemDetailModal}\n              toggleEditItemModal={this.toggleEditItemModal}/>\n    }) \n\n    return (\n      <div className='List'>\n        <h3>{this.context.list.name}</h3>\n        <button onClick={() => this.toggleEditListModal()}>\n          Edit List Name\n        </button>\n        <CasualistContext.Consumer>\n          {({updateDisplayItemsOrder}) => (\n            <DragDropContext onDragEnd={(result) => this.handleOnDragEnd(result, updateDisplayItemsOrder)}>\n              <Droppable droppableId={'list_droppable_area'} isDropDisabled={this.context.currentFilter !== 'all' ? true : false}>\n                {(provided) => (\n                  <ul className='List_ul' {...provided.droppableProps} ref={provided.innerRef}>\n                    {items}\n                    {provided.placeholder}\n                  </ul>\n                )}\n              </Droppable>\n            </DragDropContext>\n          )}\n        </CasualistContext.Consumer>\n        <button onClick={() => this.toggleAddListItemModal()}>\n          + Add List Item\n        </button>\n\n        <Modal  /* Pop up Edit List Modal */\n          isOpen={this.state.editListModalIsOpen} \n          style={modalStyles}\n          onRequestClose ={this.toggleEditListModal}\n          shouldCloseOnOverlayClick={true}> \n          <EditList toggleEditListModal={this.toggleEditListModal}/>\n        </Modal>\n\n        <Modal  /* Pop up Item Detail Modal */\n          isOpen={this.state.itemDetailModalIsOpen} \n          style={modalStyles} \n          onRequestClose ={this.toggleItemDetailModal}\n          shouldCloseOnOverlayClick={true}> \n          <ItemDetail \n            toggleEditItemModal={this.toggleEditItemModal} \n            toggleItemDetailModal={this.toggleItemDetailModal} />\n        </Modal>\n\n        <Modal  /* Pop up Edit Item Modal */\n          isOpen={this.state.editItemModalIsOpen} \n          style={modalStyles} \n          onRequestClose ={this.toggleEditItemModal}\n          shouldCloseOnOverlayClick={true}> \n          <EditItem toggleEditItemModal={this.toggleEditItemModal} />\n        </Modal>\n\n        <Modal  /* Pop up Add List Item Modal */\n          isOpen={this.state.addListItemModalIsOpen} \n          style={modalStyles} \n          onRequestClose ={this.toggleAddListItemModal}\n          shouldCloseOnOverlayClick={true}> \n          <AddListItem toggleAddListItemModal={this.toggleAddListItemModal}/>\n        </Modal>\n      </div>\n    )\n  }\n}\n\n\nexport default List;\n","import React, { Component } from 'react';\nimport './ListView.css';\nimport Header from '../Header/Header'\nimport List from '../List/List'\nimport config from '../config'\nimport CasualistContext from '../CasualistContext';\n\nclass ListView extends Component {\n  static contextType = CasualistContext\n\n  componentDidMount() {\n    const listUrl = this.props.location !== undefined ? this.props.location.pathname.substring(1) : '12345' // used to pass test\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${config.API_KEY}`\n      },\n    }\n    \n    fetch(`${config.API_ENDPOINT}/lists/${listUrl}`, requestOptions) // GET List\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Could not retrieve list')\n        }\n        return res.json()\n      })\n      .then(resJson => {\n        this.context.loadList(resJson) // set List for App\n\n        fetch(`${config.API_ENDPOINT}/lists/listitems/${resJson.id}`, requestOptions) // GET List Items\n          .then(res => {\n              if(!res.ok) {\n                throw new Error('Could not retrieve list')\n              }\n              return res.json()\n          })\n          .then(resJson => this.context.loadListItems(resJson)) // set List Items for App\n          .catch(err => err.message)\n      })\n      .catch(err => err.message)\n    \n  }\n\n  render() {\n    return (\n      <>\n      <Header />\n      <div className='ListView'>\n          <div className='view_container'>\n            <List />\n          </div>\n      </div>\n      </>\n    )\n  }\n}\n\n\nexport default ListView;\n","import React, { Component } from 'react';\nimport {Route} from 'react-router-dom'\nimport './App.css';\nimport CasualistContext from './CasualistContext'\nimport LandingPage from './LandingPage/LandingPage';\nimport ListView from './ListView/ListView'\nimport config from './config'\n\nclass App extends Component {\n  static contextType = CasualistContext\n\n  state = {\n    list: {},\n    allItems: [],\n    displayItems: [],\n    currentItem: {},\n    currentFilter: 'all'\n  }\n\n  filterItems = (val) => {\n    if(val === 'all') {\n      this.setState({\n        displayItems: this.state.allItems\n      })\n    }\n    else if(val === 'todo' || val === 'doing' || val ==='done') {\n      const filterItems = this.state.allItems.filter(item => item.status === val)\n      \n      this.setState({\n        displayItems: filterItems\n      })\n    }\n    else {\n      const assignVal = val.slice(10)\n      const filterItems = this.state.allItems.filter(item => item.assign === assignVal)\n      \n      this.setState({\n        displayItems: filterItems\n      })\n    }\n  }\n\n  updateCurrItem = (id) => {\n    const currentItem = this.state.allItems.filter(item => item.id === id)\n    \n    this.setState({\n      currentItem: currentItem\n    })\n  }\n\n  updateDisplayItemsOrder = (result) => {\n    if (!result.destination) return;\n    const items = Array.from(this.state.displayItems)\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem)\n    const newItemOrder = []\n    items.forEach(item => newItemOrder.push(item.id))\n\n    this.patchList({'item_order': newItemOrder}) //API call to update list.item_order with newItemOrder\n\n    this.setState({\n      allItems: items,\n      displayItems: items\n    })\n  }\n\n  updateFilter = (val) => { // Used conditionally to only allow drag and drop when all items are displayed\n    this.setState({\n      currentFilter: val\n    })\n  }\n\n  loadList = (list) => {\n    this.setState({\n      list: list\n    })\n  }\n\n  loadListItems = (items) => {\n    this.setState({\n      allItems: items,\n      displayItems: items\n    })\n\n    this.sortByItemOrder()\n  }\n\n  sortByItemOrder = () => { // sorts list based on item order (by ID)\n    const items = this.state.allItems\n    const list = this.state.list\n    const sortedItems = []\n    for(let i = 0; i < list.item_order.length; i++ ) {\n      for(let j = 0; j < items.length; j++){\n        if(list.item_order[i] === items[j].id) {\n          sortedItems.push(items[j])\n        }\n      }\n    }\n\n    this.setState({\n      allItems: sortedItems,\n      displayItems: sortedItems\n    })\n  }\n\n  addItem = (data) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${config.API_KEY}`\n      },\n      body: JSON.stringify(data)\n    }\n    \n    fetch(`${config.API_ENDPOINT}/items`, requestOptions) // Create Item\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Could not create list')\n        }\n        return res.json()\n      })\n      .then(resJson => {\n        const { id } = resJson\n        const { item_order, url_path } = this.state.list\n\n        this.state.allItems.push(resJson)\n\n        item_order.push(id)\n        \n        const patchRequestOptions = {\n          ...requestOptions, \n          method: 'PATCH', \n          body: JSON.stringify({'item_order': item_order})}\n\n        fetch(`${config.API_ENDPOINT}/lists/${url_path}`, patchRequestOptions ) // Add new item to list item_order and update in database\n          .then(res => {\n            if(!res.ok) {\n              throw new Error('Could not update list item order')\n            }\n            setTimeout(() => {\n              this.setState({ // trigger rerender with new item\n                allItems: this.state.allItems\n              })\n            }, 100)\n            \n            return res\n          })\n          .catch(err => err.message)\n      })\n      .catch(err => err.message)\n\n      \n    \n  }\n\n  deleteItem = (id) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${config.API_KEY}`\n      },\n    }\n    \n    fetch(`${config.API_ENDPOINT}/items/${id}`, requestOptions) // DELETE Item\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Could not delete item')\n        }\n        return res\n      })\n      .then(res => {\n        const newItemOrder = this.state.list.item_order.filter(item => item !== id) // Removes item id from item_order\n        const patchData = {\n          'item_order': newItemOrder\n        }\n        this.patchList(patchData)\n        \n      })\n      .catch(err => err.message)\n\n    const newAllItems = this.state.allItems.filter(item => item.id !== id)\n\n    this.setState({\n      allItems: newAllItems,\n      displayItems: newAllItems,\n      currentFilter: 'all'\n    })\n  }\n\n  patchList = (data) => { // handles all list patches\n    const requestOptions = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${config.API_KEY}`\n      },\n      body: JSON.stringify(data)\n    }\n\n    fetch(`${config.API_ENDPOINT}/lists/${this.state.list.url_path}`, requestOptions)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Could not update list details.')\n        }\n        return res\n      })\n      .catch(err => err.message)\n\n      this.setState({\n        list: {...this.state.list, ...data} //trigger re-render with updates\n      })\n  }\n\n  patchItem = (id, data) => { // handles all items patches\n    const requestOptions = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${config.API_KEY}`\n      },\n      body: JSON.stringify(data)\n    }\n\n    fetch(`${config.API_ENDPOINT}/items/${id}`, requestOptions)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Could not update list details.')\n        }\n        return res\n      })\n      .catch(err => err.message)\n\n      const allItemsIndex = this.state.allItems.findIndex(item => item.id === id)\n      const displayItemsIndex = this.state.displayItems.findIndex(item => item.id === id)\n      let newAllItems = [...this.state.allItems]\n      let newDisplayItems = [...this.state.displayItems]\n      let newCurrentItem = [{...this.state.currentItem[0], ...data}]\n\n      newAllItems[allItemsIndex] = {...newAllItems[allItemsIndex], ...data}\n      newDisplayItems[displayItemsIndex] = {...newDisplayItems[displayItemsIndex], ...data}\n\n      this.setState({ //trigger re-render with updates\n        allItems: newAllItems,\n        displayItems: newDisplayItems,\n        currentItem: newCurrentItem\n      })\n    \n  }\n\n  render() {\n    const contextValue = {\n      list: this.state.list,\n      allItems: this.state.allItems,\n      displayItems: this.state.displayItems,\n      currentItem: this.state.currentItem,\n      currentFilter: this.state.currentFilter,\n      filterItems: this.filterItems,\n      updateCurrItem: this.updateCurrItem,\n      updateDisplayItemsOrder: this.updateDisplayItemsOrder,\n      updateFilter: this.updateFilter,\n      loadList: this.loadList,\n      loadListItems: this.loadListItems,\n      addItem: this.addItem,\n      deleteItem: this.deleteItem,\n      patchList: this.patchList,\n      patchItem: this.patchItem,\n      \n    }\n\n    return (\n      <main className='App'>\n        <CasualistContext.Provider value={contextValue}>\n          <Route\n            exact\n            path={'/'}\n            component={LandingPage}/>\n          <Route\n            exact\n            path={'/:list_id'}\n            component={ListView}/>\n        </CasualistContext.Provider>\n      </main>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n  );"],"sourceRoot":""}